{"ast":null,"code":"import { defineComponent, reactive, toRefs } from \"vue\";\nexport default defineComponent({\n  name: \"HomeView\",\n  components: {},\n  setup() {\n    //表格的全数据（这里是自定义的列表，要看分页效果自行往此数组内加数据）\n    const allTableData = [{\n      date: \"2016-05-03\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }, {\n      date: \"2016-05-02\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }, {\n      date: \"2016-05-04\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }, {\n      date: \"2016-05-01\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }, {\n      date: \"2016-05-01\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }, {\n      date: \"2016-05-01\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }, {\n      date: \"2016-05-01\",\n      name: \"Tom\",\n      address: \"No. 189, Grove St, Los Angeles\"\n    }];\n    //表格用到的参数\n    const state = reactive({\n      page: 1,\n      limit: 10,\n      total: allTableData.length\n    });\n    //前端限制分页（tableData为当前展示页表格）\n    const tableData = () => {\n      return allTableData.filter((item, index) => index < state.page * state.limit && index >= state.limit * (state.page - 1));\n    };\n    //改变页码\n    const handleCurrentChange = e => {\n      state.page = e;\n    };\n    //改变页数限制\n    const handleSizeChange = e => {\n      state.limit = e;\n    };\n    return {\n      allTableData,\n      tableData,\n      handleCurrentChange,\n      handleSizeChange,\n      ...toRefs(state)\n    };\n  }\n});","map":{"version":3,"names":["defineComponent","reactive","toRefs","name","components","setup","allTableData","date","address","state","page","limit","total","length","tableData","filter","item","index","handleCurrentChange","e","handleSizeChange"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\views\\inbound\\record\\index.vue"],"sourcesContent":["<template>\n  <div class=\"home\">\n    <el-table :data=\"tableData()\" style=\"width: 100%\">\n      <el-table-column type=\"index\" width=\"50\" />\n      <el-table-column prop=\"date\" label=\"日期\" width=\"180\" />\n      <el-table-column prop=\"name\" label=\"名字\" width=\"180\" />\n      <el-table-column prop=\"address\" label=\"地址\" />\n    </el-table>\n    <div class=\"example-pagination-block\">\n      <!-- <div class=\"example-demonstration\">分页</div> -->\n      <el-pagination\n        background\n        layout=\"prev, pager, next ,total,sizes\"\n        :total=\"total\"\n        @current-change=\"handleCurrentChange\"\n        @size-change=\"handleSizeChange\"\n      />\n    </div>\n  </div>\n</template>\n \n<script>\nimport { defineComponent, reactive, toRefs } from \"vue\";\n \nexport default defineComponent({\n  name: \"HomeView\",\n  components: {},\n  setup() {\n    //表格的全数据（这里是自定义的列表，要看分页效果自行往此数组内加数据）\n    const allTableData = [\n      {\n        date: \"2016-05-03\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n      {\n        date: \"2016-05-02\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n      {\n        date: \"2016-05-04\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n      {\n        date: \"2016-05-01\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n      {\n        date: \"2016-05-01\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n      {\n        date: \"2016-05-01\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n      {\n        date: \"2016-05-01\",\n        name: \"Tom\",\n        address: \"No. 189, Grove St, Los Angeles\",\n      },\n    ];\n    //表格用到的参数\n    const state = reactive({\n      page: 1,\n      limit: 10,\n      total: allTableData.length,\n    });\n    //前端限制分页（tableData为当前展示页表格）\n    const tableData = () => {\n      return allTableData.filter(\n        (item, index) =>\n          index < state.page * state.limit &&\n          index >= state.limit * (state.page - 1)\n      );\n    };\n    //改变页码\n    const handleCurrentChange = (e) => {\n      state.page = e;\n    };\n    //改变页数限制\n    const handleSizeChange = (e) => {\n      state.limit = e;\n    };\n    return {\n      allTableData,\n      tableData,\n      handleCurrentChange,\n      handleSizeChange,\n      ...toRefs(state),\n    };\n  },\n});\n</script>"],"mappings":"AAsBA,SAASA,eAAe,EAAEC,QAAQ,EAAEC,MAAK,QAAS,KAAK;AAEvD,eAAeF,eAAe,CAAC;EAC7BG,IAAI,EAAE,UAAU;EAChBC,UAAU,EAAE,CAAC,CAAC;EACdC,KAAKA,CAAA,EAAG;IACN;IACA,MAAMC,YAAW,GAAI,CACnB;MACEC,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,EACD;MACED,IAAI,EAAE,YAAY;MAClBJ,IAAI,EAAE,KAAK;MACXK,OAAO,EAAE;IACX,CAAC,CACF;IACD;IACA,MAAMC,KAAI,GAAIR,QAAQ,CAAC;MACrBS,IAAI,EAAE,CAAC;MACPC,KAAK,EAAE,EAAE;MACTC,KAAK,EAAEN,YAAY,CAACO;IACtB,CAAC,CAAC;IACF;IACA,MAAMC,SAAQ,GAAIA,CAAA,KAAM;MACtB,OAAOR,YAAY,CAACS,MAAM,CACxB,CAACC,IAAI,EAAEC,KAAK,KACVA,KAAI,GAAIR,KAAK,CAACC,IAAG,GAAID,KAAK,CAACE,KAAI,IAC/BM,KAAI,IAAKR,KAAK,CAACE,KAAI,IAAKF,KAAK,CAACC,IAAG,GAAI,CAAC,CAC1C,CAAC;IACH,CAAC;IACD;IACA,MAAMQ,mBAAkB,GAAKC,CAAC,IAAK;MACjCV,KAAK,CAACC,IAAG,GAAIS,CAAC;IAChB,CAAC;IACD;IACA,MAAMC,gBAAe,GAAKD,CAAC,IAAK;MAC9BV,KAAK,CAACE,KAAI,GAAIQ,CAAC;IACjB,CAAC;IACD,OAAO;MACLb,YAAY;MACZQ,SAAS;MACTI,mBAAmB;MACnBE,gBAAgB;MAChB,GAAGlB,MAAM,CAACO,KAAK;IACjB,CAAC;EACH;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}