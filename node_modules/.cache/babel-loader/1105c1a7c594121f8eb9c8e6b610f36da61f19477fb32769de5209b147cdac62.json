{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport ScrollPane from './ScrollPane';\nimport path from 'path';\nexport default {\n  components: {\n    ScrollPane\n  },\n  data() {\n    return {\n      visible: false,\n      top: 0,\n      left: 0,\n      selectedTag: {},\n      affixTags: []\n    };\n  },\n  computed: {\n    visitedViews() {\n      return this.$store.state.tagsView.visitedViews;\n    },\n    routes() {\n      return this.$store.state.permission.routes;\n    },\n    theme() {\n      return this.$store.state.settings.theme;\n    }\n  },\n  watch: {\n    $route() {\n      this.addTags();\n      this.moveToCurrentTag();\n    },\n    visible(value) {\n      if (value) {\n        document.body.addEventListener('click', this.closeMenu);\n      } else {\n        document.body.removeEventListener('click', this.closeMenu);\n      }\n    }\n  },\n  mounted() {\n    this.initTags();\n    this.addTags();\n  },\n  methods: {\n    isActive(route) {\n      return route.path === this.$route.path;\n    },\n    activeStyle(tag) {\n      if (!this.isActive(tag)) return {};\n      return {\n        \"background-color\": this.theme,\n        \"border-color\": this.theme\n      };\n    },\n    isAffix(tag) {\n      return tag.meta && tag.meta.affix;\n    },\n    isFirstView() {\n      try {\n        return this.selectedTag.fullPath === '/index' || this.selectedTag.fullPath === this.visitedViews[1].fullPath;\n      } catch (err) {\n        return false;\n      }\n    },\n    isLastView() {\n      try {\n        return this.selectedTag.fullPath === this.visitedViews[this.visitedViews.length - 1].fullPath;\n      } catch (err) {\n        return false;\n      }\n    },\n    filterAffixTags(routes, basePath = '/') {\n      let tags = [];\n      routes.forEach(route => {\n        if (route.meta && route.meta.affix) {\n          const tagPath = path.resolve(basePath, route.path);\n          tags.push({\n            fullPath: tagPath,\n            path: tagPath,\n            name: route.name,\n            meta: {\n              ...route.meta\n            }\n          });\n        }\n        if (route.children) {\n          const tempTags = this.filterAffixTags(route.children, route.path);\n          if (tempTags.length >= 1) {\n            tags = [...tags, ...tempTags];\n          }\n        }\n      });\n      return tags;\n    },\n    initTags() {\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes);\n      for (const tag of affixTags) {\n        // Must have tag name\n        if (tag.name) {\n          this.$store.dispatch('tagsView/addVisitedView', tag);\n        }\n      }\n    },\n    addTags() {\n      const {\n        name\n      } = this.$route;\n      if (name) {\n        this.$store.dispatch('tagsView/addView', this.$route);\n        if (this.$route.meta.link) {\n          this.$store.dispatch('tagsView/addIframeView', this.$route);\n        }\n      }\n      return false;\n    },\n    moveToCurrentTag() {\n      const tags = this.$refs.tag;\n      this.$nextTick(() => {\n        for (const tag of tags) {\n          if (tag.to.path === this.$route.path) {\n            this.$refs.scrollPane.moveToTarget(tag);\n            // when query is different then update\n            if (tag.to.fullPath !== this.$route.fullPath) {\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route);\n            }\n            break;\n          }\n        }\n      });\n    },\n    refreshSelectedTag(view) {\n      this.$tab.refreshPage(view);\n      if (this.$route.meta.link) {\n        this.$store.dispatch('tagsView/delIframeView', this.$route);\n      }\n    },\n    closeSelectedTag(view) {\n      this.$tab.closePage(view).then(({\n        visitedViews\n      }) => {\n        if (this.isActive(view)) {\n          this.toLastView(visitedViews, view);\n        }\n      });\n    },\n    closeRightTags() {\n      this.$tab.closeRightPage(this.selectedTag).then(visitedViews => {\n        if (!visitedViews.find(i => i.fullPath === this.$route.fullPath)) {\n          this.toLastView(visitedViews);\n        }\n      });\n    },\n    closeLeftTags() {\n      this.$tab.closeLeftPage(this.selectedTag).then(visitedViews => {\n        if (!visitedViews.find(i => i.fullPath === this.$route.fullPath)) {\n          this.toLastView(visitedViews);\n        }\n      });\n    },\n    closeOthersTags() {\n      this.$router.push(this.selectedTag.fullPath).catch(() => {});\n      this.$tab.closeOtherPage(this.selectedTag).then(() => {\n        this.moveToCurrentTag();\n      });\n    },\n    closeAllTags(view) {\n      this.$tab.closeAllPage().then(({\n        visitedViews\n      }) => {\n        if (this.affixTags.some(tag => tag.path === this.$route.path)) {\n          return;\n        }\n        this.toLastView(visitedViews, view);\n      });\n    },\n    toLastView(visitedViews, view) {\n      const latestView = visitedViews.slice(-1)[0];\n      if (latestView) {\n        this.$router.push(latestView.fullPath);\n      } else {\n        // now the default is to redirect to the home page if there is no tags-view,\n        // you can adjust it according to your needs.\n        if (view.name === 'Dashboard') {\n          // to reload home page\n          this.$router.replace({\n            path: '/redirect' + view.fullPath\n          });\n        } else {\n          this.$router.push('/');\n        }\n      }\n    },\n    openMenu(tag, e) {\n      const menuMinWidth = 105;\n      const offsetLeft = this.$el.getBoundingClientRect().left; // container margin left\n      const offsetWidth = this.$el.offsetWidth; // container width\n      const maxLeft = offsetWidth - menuMinWidth; // left boundary\n      const left = e.clientX - offsetLeft + 15; // 15: margin right\n\n      if (left > maxLeft) {\n        this.left = maxLeft;\n      } else {\n        this.left = left;\n      }\n      this.top = e.clientY;\n      this.visible = true;\n      this.selectedTag = tag;\n    },\n    closeMenu() {\n      this.visible = false;\n    },\n    handleScroll() {\n      this.closeMenu();\n    }\n  }\n};","map":{"version":3,"names":["ScrollPane","path","components","data","visible","top","left","selectedTag","affixTags","computed","visitedViews","$store","state","tagsView","routes","permission","theme","settings","watch","$route","addTags","moveToCurrentTag","value","document","body","addEventListener","closeMenu","removeEventListener","mounted","initTags","methods","isActive","route","activeStyle","tag","isAffix","meta","affix","isFirstView","fullPath","err","isLastView","length","filterAffixTags","basePath","tags","forEach","tagPath","resolve","push","name","children","tempTags","dispatch","link","$refs","$nextTick","to","scrollPane","moveToTarget","refreshSelectedTag","view","$tab","refreshPage","closeSelectedTag","closePage","then","toLastView","closeRightTags","closeRightPage","find","i","closeLeftTags","closeLeftPage","closeOthersTags","$router","catch","closeOtherPage","closeAllTags","closeAllPage","some","latestView","slice","replace","openMenu","e","menuMinWidth","offsetLeft","$el","getBoundingClientRect","offsetWidth","maxLeft","clientX","clientY","handleScroll"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\layout\\components\\TagsView\\index.vue"],"sourcesContent":["<template>\r\n  <div id=\"tags-view-container\" class=\"tags-view-container\">\r\n    <scroll-pane ref=\"scrollPane\" class=\"tags-view-wrapper\" @scroll=\"handleScroll\">\r\n      <router-link\r\n        v-for=\"tag in visitedViews\"\r\n        ref=\"tag\"\r\n        :key=\"tag.path\"\r\n        :class=\"isActive(tag)?'active':''\"\r\n        :to=\"{ path: tag.path, query: tag.query, fullPath: tag.fullPath }\"\r\n        tag=\"span\"\r\n        class=\"tags-view-item\"\r\n        :style=\"activeStyle(tag)\"\r\n        @click.middle.native=\"!isAffix(tag)?closeSelectedTag(tag):''\"\r\n        @contextmenu.prevent.native=\"openMenu(tag,$event)\"\r\n      >\r\n        {{ tag.title }}\r\n        <span v-if=\"!isAffix(tag)\" class=\"el-icon-close\" @click.prevent.stop=\"closeSelectedTag(tag)\" />\r\n      </router-link>\r\n    </scroll-pane>\r\n    <ul v-show=\"visible\" :style=\"{left:left+'px',top:top+'px'}\" class=\"contextmenu\">\r\n      <li @click=\"refreshSelectedTag(selectedTag)\"><i class=\"el-icon-refresh-right\"></i> 刷新页面</li>\r\n      <li v-if=\"!isAffix(selectedTag)\" @click=\"closeSelectedTag(selectedTag)\"><i class=\"el-icon-close\"></i> 关闭当前</li>\r\n      <li @click=\"closeOthersTags\"><i class=\"el-icon-circle-close\"></i> 关闭其他</li>\r\n      <li v-if=\"!isFirstView()\" @click=\"closeLeftTags\"><i class=\"el-icon-back\"></i> 关闭左侧</li>\r\n      <li v-if=\"!isLastView()\" @click=\"closeRightTags\"><i class=\"el-icon-right\"></i> 关闭右侧</li>\r\n      <li @click=\"closeAllTags(selectedTag)\"><i class=\"el-icon-circle-close\"></i> 全部关闭</li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ScrollPane from './ScrollPane'\r\nimport path from 'path'\r\n\r\nexport default {\r\n  components: { ScrollPane },\r\n  data() {\r\n    return {\r\n      visible: false,\r\n      top: 0,\r\n      left: 0,\r\n      selectedTag: {},\r\n      affixTags: []\r\n    }\r\n  },\r\n  computed: {\r\n    visitedViews() {\r\n      return this.$store.state.tagsView.visitedViews\r\n    },\r\n    routes() {\r\n      return this.$store.state.permission.routes\r\n    },\r\n    theme() {\r\n      return this.$store.state.settings.theme;\r\n    }\r\n  },\r\n  watch: {\r\n    $route() {\r\n      this.addTags()\r\n      this.moveToCurrentTag()\r\n    },\r\n    visible(value) {\r\n      if (value) {\r\n        document.body.addEventListener('click', this.closeMenu)\r\n      } else {\r\n        document.body.removeEventListener('click', this.closeMenu)\r\n      }\r\n    }\r\n  },\r\n  mounted() {\r\n    this.initTags()\r\n    this.addTags()\r\n  },\r\n  methods: {\r\n    isActive(route) {\r\n      return route.path === this.$route.path\r\n    },\r\n    activeStyle(tag) {\r\n      if (!this.isActive(tag)) return {};\r\n      return {\r\n        \"background-color\": this.theme,\r\n        \"border-color\": this.theme\r\n      };\r\n    },\r\n    isAffix(tag) {\r\n      return tag.meta && tag.meta.affix\r\n    },\r\n    isFirstView() {\r\n      try {\r\n        return this.selectedTag.fullPath === '/index' || this.selectedTag.fullPath === this.visitedViews[1].fullPath\r\n      } catch (err) {\r\n        return false\r\n      }\r\n    },\r\n    isLastView() {\r\n      try {\r\n        return this.selectedTag.fullPath === this.visitedViews[this.visitedViews.length - 1].fullPath\r\n      } catch (err) {\r\n        return false\r\n      }\r\n    },\r\n    filterAffixTags(routes, basePath = '/') {\r\n      let tags = []\r\n      routes.forEach(route => {\r\n        if (route.meta && route.meta.affix) {\r\n          const tagPath = path.resolve(basePath, route.path)\r\n          tags.push({\r\n            fullPath: tagPath,\r\n            path: tagPath,\r\n            name: route.name,\r\n            meta: { ...route.meta }\r\n          })\r\n        }\r\n        if (route.children) {\r\n          const tempTags = this.filterAffixTags(route.children, route.path)\r\n          if (tempTags.length >= 1) {\r\n            tags = [...tags, ...tempTags]\r\n          }\r\n        }\r\n      })\r\n      return tags\r\n    },\r\n    initTags() {\r\n      const affixTags = this.affixTags = this.filterAffixTags(this.routes)\r\n      for (const tag of affixTags) {\r\n        // Must have tag name\r\n        if (tag.name) {\r\n          this.$store.dispatch('tagsView/addVisitedView', tag)\r\n        }\r\n      }\r\n    },\r\n    addTags() {\r\n      const { name } = this.$route\r\n      if (name) {\r\n        this.$store.dispatch('tagsView/addView', this.$route)\r\n        if (this.$route.meta.link) {\r\n          this.$store.dispatch('tagsView/addIframeView', this.$route)\r\n        }\r\n      }\r\n      return false\r\n    },\r\n    moveToCurrentTag() {\r\n      const tags = this.$refs.tag\r\n      this.$nextTick(() => {\r\n        for (const tag of tags) {\r\n          if (tag.to.path === this.$route.path) {\r\n            this.$refs.scrollPane.moveToTarget(tag)\r\n            // when query is different then update\r\n            if (tag.to.fullPath !== this.$route.fullPath) {\r\n              this.$store.dispatch('tagsView/updateVisitedView', this.$route)\r\n            }\r\n            break\r\n          }\r\n        }\r\n      })\r\n    },\r\n    refreshSelectedTag(view) {\r\n      this.$tab.refreshPage(view);\r\n      if (this.$route.meta.link) {\r\n        this.$store.dispatch('tagsView/delIframeView', this.$route)\r\n      }\r\n    },\r\n    closeSelectedTag(view) {\r\n      this.$tab.closePage(view).then(({ visitedViews }) => {\r\n        if (this.isActive(view)) {\r\n          this.toLastView(visitedViews, view)\r\n        }\r\n      })\r\n    },\r\n    closeRightTags() {\r\n      this.$tab.closeRightPage(this.selectedTag).then(visitedViews => {\r\n        if (!visitedViews.find(i => i.fullPath === this.$route.fullPath)) {\r\n          this.toLastView(visitedViews)\r\n        }\r\n      })\r\n    },\r\n    closeLeftTags() {\r\n      this.$tab.closeLeftPage(this.selectedTag).then(visitedViews => {\r\n        if (!visitedViews.find(i => i.fullPath === this.$route.fullPath)) {\r\n          this.toLastView(visitedViews)\r\n        }\r\n      })\r\n    },\r\n    closeOthersTags() {\r\n      this.$router.push(this.selectedTag.fullPath).catch(()=>{});\r\n      this.$tab.closeOtherPage(this.selectedTag).then(() => {\r\n        this.moveToCurrentTag()\r\n      })\r\n    },\r\n    closeAllTags(view) {\r\n      this.$tab.closeAllPage().then(({ visitedViews }) => {\r\n        if (this.affixTags.some(tag => tag.path === this.$route.path)) {\r\n          return\r\n        }\r\n        this.toLastView(visitedViews, view)\r\n      })\r\n    },\r\n    toLastView(visitedViews, view) {\r\n      const latestView = visitedViews.slice(-1)[0]\r\n      if (latestView) {\r\n        this.$router.push(latestView.fullPath)\r\n      } else {\r\n        // now the default is to redirect to the home page if there is no tags-view,\r\n        // you can adjust it according to your needs.\r\n        if (view.name === 'Dashboard') {\r\n          // to reload home page\r\n          this.$router.replace({ path: '/redirect' + view.fullPath })\r\n        } else {\r\n          this.$router.push('/')\r\n        }\r\n      }\r\n    },\r\n    openMenu(tag, e) {\r\n      const menuMinWidth = 105\r\n      const offsetLeft = this.$el.getBoundingClientRect().left // container margin left\r\n      const offsetWidth = this.$el.offsetWidth // container width\r\n      const maxLeft = offsetWidth - menuMinWidth // left boundary\r\n      const left = e.clientX - offsetLeft + 15 // 15: margin right\r\n\r\n      if (left > maxLeft) {\r\n        this.left = maxLeft\r\n      } else {\r\n        this.left = left\r\n      }\r\n\r\n      this.top = e.clientY\r\n      this.visible = true\r\n      this.selectedTag = tag\r\n    },\r\n    closeMenu() {\r\n      this.visible = false\r\n    },\r\n    handleScroll() {\r\n      this.closeMenu()\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.tags-view-container {\r\n  height: 34px;\r\n  width: 100%;\r\n  background: #fff;\r\n  border-bottom: 1px solid #d8dce5;\r\n  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, .12), 0 0 3px 0 rgba(0, 0, 0, .04);\r\n  .tags-view-wrapper {\r\n    .tags-view-item {\r\n      display: inline-block;\r\n      position: relative;\r\n      cursor: pointer;\r\n      height: 26px;\r\n      line-height: 26px;\r\n      border: 1px solid #d8dce5;\r\n      color: #495060;\r\n      background: #fff;\r\n      padding: 0 8px;\r\n      font-size: 12px;\r\n      margin-left: 5px;\r\n      margin-top: 4px;\r\n      &:first-of-type {\r\n        margin-left: 15px;\r\n      }\r\n      &:last-of-type {\r\n        margin-right: 15px;\r\n      }\r\n      &.active {\r\n        background-color: #42b983;\r\n        color: #fff;\r\n        border-color: #42b983;\r\n        &::before {\r\n          content: '';\r\n          background: #fff;\r\n          display: inline-block;\r\n          width: 8px;\r\n          height: 8px;\r\n          border-radius: 50%;\r\n          position: relative;\r\n          margin-right: 2px;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .contextmenu {\r\n    margin: 0;\r\n    background: #fff;\r\n    z-index: 3000;\r\n    position: absolute;\r\n    list-style-type: none;\r\n    padding: 5px 0;\r\n    border-radius: 4px;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    color: #333;\r\n    box-shadow: 2px 2px 3px 0 rgba(0, 0, 0, .3);\r\n    li {\r\n      margin: 0;\r\n      padding: 7px 16px;\r\n      cursor: pointer;\r\n      &:hover {\r\n        background: #eee;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n\r\n<style lang=\"scss\">\r\n//reset element css of el-icon-close\r\n.tags-view-wrapper {\r\n  .tags-view-item {\r\n    .el-icon-close {\r\n      width: 16px;\r\n      height: 16px;\r\n      vertical-align: 2px;\r\n      border-radius: 50%;\r\n      text-align: center;\r\n      transition: all .3s cubic-bezier(.645, .045, .355, 1);\r\n      transform-origin: 100% 50%;\r\n      &:before {\r\n        transform: scale(.6);\r\n        display: inline-block;\r\n        vertical-align: -3px;\r\n      }\r\n      &:hover {\r\n        background-color: #b4bccc;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}