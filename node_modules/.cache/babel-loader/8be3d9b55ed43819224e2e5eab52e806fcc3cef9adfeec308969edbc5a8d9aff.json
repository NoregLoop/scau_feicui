{"ast":null,"code":"export default {\n  data() {\n    return {\n      sizeOptions: [{\n        label: 'Default',\n        value: 'default'\n      }, {\n        label: 'Medium',\n        value: 'medium'\n      }, {\n        label: 'Small',\n        value: 'small'\n      }, {\n        label: 'Mini',\n        value: 'mini'\n      }]\n    };\n  },\n  computed: {\n    size() {\n      return this.$store.getters.size;\n    }\n  },\n  methods: {\n    handleSetSize(size) {\n      this.$ELEMENT.size = size;\n      this.$store.dispatch('app/setSize', size);\n      this.refreshView();\n      this.$message({\n        message: 'Switch Size Success',\n        type: 'success'\n      });\n    },\n    refreshView() {\n      // In order to make the cached page re-rendered\n      this.$store.dispatch('tagsView/delAllCachedViews', this.$route);\n      const {\n        fullPath\n      } = this.$route;\n      this.$nextTick(() => {\n        this.$router.replace({\n          path: '/redirect' + fullPath\n        });\n      });\n    }\n  }\n};","map":{"version":3,"names":["data","sizeOptions","label","value","computed","size","$store","getters","methods","handleSetSize","$ELEMENT","dispatch","refreshView","$message","message","type","$route","fullPath","$nextTick","$router","replace","path"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\components\\SizeSelect\\index.vue"],"sourcesContent":["<template>\r\n  <el-dropdown trigger=\"click\" @command=\"handleSetSize\">\r\n    <div>\r\n      <svg-icon class-name=\"size-icon\" icon-class=\"size\" />\r\n    </div>\r\n    <el-dropdown-menu slot=\"dropdown\">\r\n      <el-dropdown-item v-for=\"item of sizeOptions\" :key=\"item.value\" :disabled=\"size===item.value\" :command=\"item.value\">\r\n        {{ item.label }}\r\n      </el-dropdown-item>\r\n    </el-dropdown-menu>\r\n  </el-dropdown>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  data() {\r\n    return {\r\n      sizeOptions: [\r\n        { label: 'Default', value: 'default' },\r\n        { label: 'Medium', value: 'medium' },\r\n        { label: 'Small', value: 'small' },\r\n        { label: 'Mini', value: 'mini' }\r\n      ]\r\n    }\r\n  },\r\n  computed: {\r\n    size() {\r\n      return this.$store.getters.size\r\n    }\r\n  },\r\n  methods: {\r\n    handleSetSize(size) {\r\n      this.$ELEMENT.size = size\r\n      this.$store.dispatch('app/setSize', size)\r\n      this.refreshView()\r\n      this.$message({\r\n        message: 'Switch Size Success',\r\n        type: 'success'\r\n      })\r\n    },\r\n    refreshView() {\r\n      // In order to make the cached page re-rendered\r\n      this.$store.dispatch('tagsView/delAllCachedViews', this.$route)\r\n\r\n      const { fullPath } = this.$route\r\n\r\n      this.$nextTick(() => {\r\n        this.$router.replace({\r\n          path: '/redirect' + fullPath\r\n        })\r\n      })\r\n    }\r\n  }\r\n\r\n}\r\n</script>\r\n"],"mappings":"AAcA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE,CACX;QAAEC,KAAK,EAAE,SAAS;QAAEC,KAAK,EAAE;MAAU,CAAC,EACtC;QAAED,KAAK,EAAE,QAAQ;QAAEC,KAAK,EAAE;MAAS,CAAC,EACpC;QAAED,KAAK,EAAE,OAAO;QAAEC,KAAK,EAAE;MAAQ,CAAC,EAClC;QAAED,KAAK,EAAE,MAAM;QAAEC,KAAK,EAAE;MAAO;IAEnC;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,IAAIA,CAAA,EAAG;MACL,OAAO,IAAI,CAACC,MAAM,CAACC,OAAO,CAACF,IAAG;IAChC;EACF,CAAC;EACDG,OAAO,EAAE;IACPC,aAAaA,CAACJ,IAAI,EAAE;MAClB,IAAI,CAACK,QAAQ,CAACL,IAAG,GAAIA,IAAG;MACxB,IAAI,CAACC,MAAM,CAACK,QAAQ,CAAC,aAAa,EAAEN,IAAI;MACxC,IAAI,CAACO,WAAW,CAAC;MACjB,IAAI,CAACC,QAAQ,CAAC;QACZC,OAAO,EAAE,qBAAqB;QAC9BC,IAAI,EAAE;MACR,CAAC;IACH,CAAC;IACDH,WAAWA,CAAA,EAAG;MACZ;MACA,IAAI,CAACN,MAAM,CAACK,QAAQ,CAAC,4BAA4B,EAAE,IAAI,CAACK,MAAM;MAE9D,MAAM;QAAEC;MAAS,IAAI,IAAI,CAACD,MAAK;MAE/B,IAAI,CAACE,SAAS,CAAC,MAAM;QACnB,IAAI,CAACC,OAAO,CAACC,OAAO,CAAC;UACnBC,IAAI,EAAE,WAAU,GAAIJ;QACtB,CAAC;MACH,CAAC;IACH;EACF;AAEF"},"metadata":{},"sourceType":"module","externalDependencies":[]}