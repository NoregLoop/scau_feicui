{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { getCodeImg } from \"@/api/login\";\nimport Cookies from \"js-cookie\";\nimport { encrypt, decrypt } from '@/utils/jsencrypt';\nexport default {\n  name: \"Login\",\n  data() {\n    return {\n      codeUrl: \"\",\n      loginForm: {\n        username: \"admin\",\n        password: \"admin123\",\n        rememberMe: false,\n        code: \"\",\n        uuid: \"\"\n      },\n      loginRules: {\n        username: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入您的账号\"\n        }],\n        password: [{\n          required: true,\n          trigger: \"blur\",\n          message: \"请输入您的密码\"\n        }],\n        code: [{\n          required: true,\n          trigger: \"change\",\n          message: \"请输入验证码\"\n        }]\n      },\n      loading: false,\n      // 验证码开关\n      captchaEnabled: true,\n      // 注册开关\n      register: false,\n      redirect: undefined\n    };\n  },\n  watch: {\n    $route: {\n      handler: function (route) {\n        this.redirect = route.query && route.query.redirect;\n      },\n      immediate: true\n    }\n  },\n  created() {\n    this.getCode();\n    this.getCookie();\n  },\n  methods: {\n    getCode() {\n      getCodeImg().then(res => {\n        this.captchaEnabled = res.captchaEnabled === undefined ? true : res.captchaEnabled;\n        if (this.captchaEnabled) {\n          this.codeUrl = \"data:image/gif;base64,\" + res.img;\n          this.loginForm.uuid = res.uuid;\n        }\n      });\n    },\n    getCookie() {\n      const username = Cookies.get(\"username\");\n      const password = Cookies.get(\"password\");\n      const rememberMe = Cookies.get('rememberMe');\n      this.loginForm = {\n        username: username === undefined ? this.loginForm.username : username,\n        password: password === undefined ? this.loginForm.password : decrypt(password),\n        rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)\n      };\n    },\n    handleLogin() {\n      this.$refs.loginForm.validate(valid => {\n        if (valid) {\n          this.loading = true;\n          if (this.loginForm.rememberMe) {\n            Cookies.set(\"username\", this.loginForm.username, {\n              expires: 30\n            });\n            Cookies.set(\"password\", encrypt(this.loginForm.password), {\n              expires: 30\n            });\n            Cookies.set('rememberMe', this.loginForm.rememberMe, {\n              expires: 30\n            });\n          } else {\n            Cookies.remove(\"username\");\n            Cookies.remove(\"password\");\n            Cookies.remove('rememberMe');\n          }\n          this.$store.dispatch(\"Login\", this.loginForm).then(() => {\n            this.$router.push({\n              path: this.redirect || \"/\"\n            }).catch(() => {});\n          }).catch(() => {\n            this.loading = false;\n            if (this.captchaEnabled) {\n              this.getCode();\n            }\n          });\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["getCodeImg","Cookies","encrypt","decrypt","name","data","codeUrl","loginForm","username","password","rememberMe","code","uuid","loginRules","required","trigger","message","loading","captchaEnabled","register","redirect","undefined","watch","$route","handler","route","query","immediate","created","getCode","getCookie","methods","then","res","img","get","Boolean","handleLogin","$refs","validate","valid","set","expires","remove","$store","dispatch","$router","push","path","catch"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\views\\login.vue"],"sourcesContent":["<template>\r\n    <div class=\"login\">\r\n      <el-form ref=\"loginForm\" :model=\"loginForm\" :rules=\"loginRules\" class=\"login-form\">\r\n        <h3 class=\"title\">SCAU翡翠ERP系统</h3>\r\n        <el-form-item prop=\"username\">\r\n          <el-input\r\n            v-model=\"loginForm.username\"\r\n            type=\"text\"\r\n            auto-complete=\"off\"\r\n            placeholder=\"账号\"\r\n          >\r\n            <svg-icon slot=\"prefix\" icon-class=\"user\" class=\"el-input__icon input-icon\" />\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"password\">\r\n          <el-input\r\n            v-model=\"loginForm.password\"\r\n            type=\"password\"\r\n            auto-complete=\"off\"\r\n            placeholder=\"密码\"\r\n            @keyup.enter.native=\"handleLogin\"\r\n          >\r\n            <svg-icon slot=\"prefix\" icon-class=\"password\" class=\"el-input__icon input-icon\" />\r\n          </el-input>\r\n        </el-form-item>\r\n        <el-form-item prop=\"code\" v-if=\"captchaEnabled\">\r\n          <el-input\r\n            v-model=\"loginForm.code\"\r\n            auto-complete=\"off\"\r\n            placeholder=\"验证码\"\r\n            style=\"width: 63%\"\r\n            @keyup.enter.native=\"handleLogin\"\r\n          >\r\n            <svg-icon slot=\"prefix\" icon-class=\"validCode\" class=\"el-input__icon input-icon\" />\r\n          </el-input>\r\n          <div class=\"login-code\">\r\n            <img :src=\"codeUrl\" @click=\"getCode\" class=\"login-code-img\"/>\r\n          </div>\r\n        </el-form-item>\r\n        <el-checkbox v-model=\"loginForm.rememberMe\" style=\"margin:0px 0px 25px 0px;\">记住密码</el-checkbox>\r\n        <el-form-item style=\"width:100%;\">\r\n          <el-button\r\n            :loading=\"loading\"\r\n            size=\"medium\"\r\n            type=\"primary\"\r\n            style=\"width:100%;\"\r\n            @click.native.prevent=\"handleLogin\"\r\n          >\r\n            <span v-if=\"!loading\">登 录</span>\r\n            <span v-else>登 录 中...</span>\r\n          </el-button>\r\n          <div style=\"float: right;\" v-if=\"register\">\r\n            <router-link class=\"link-type\" :to=\"'/register'\">立即注册</router-link>\r\n          </div>\r\n        </el-form-item>\r\n      </el-form>\r\n      <!--  底部  -->\r\n      <div class=\"el-login-footer\">\r\n        <span>Copyright © 2018-2023 ruoyi.vip All Rights Reserved.</span>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import { getCodeImg } from \"@/api/login\";\r\n  import Cookies from \"js-cookie\";\r\n  import { encrypt, decrypt } from '@/utils/jsencrypt'\r\n  \r\n  export default {\r\n    name: \"Login\",\r\n    data() {\r\n      return {\r\n        codeUrl: \"\",\r\n        loginForm: {\r\n          username: \"admin\",\r\n          password: \"admin123\",\r\n          rememberMe: false,\r\n          code: \"\",\r\n          uuid: \"\"\r\n        },\r\n        loginRules: {\r\n          username: [\r\n            { required: true, trigger: \"blur\", message: \"请输入您的账号\" }\r\n          ],\r\n          password: [\r\n            { required: true, trigger: \"blur\", message: \"请输入您的密码\" }\r\n          ],\r\n          code: [{ required: true, trigger: \"change\", message: \"请输入验证码\" }]\r\n        },\r\n        loading: false,\r\n        // 验证码开关\r\n        captchaEnabled: true,\r\n        // 注册开关\r\n        register: false,\r\n        redirect: undefined\r\n      };\r\n    },\r\n    watch: {\r\n      $route: {\r\n        handler: function(route) {\r\n          this.redirect = route.query && route.query.redirect;\r\n        },\r\n        immediate: true\r\n      }\r\n    },\r\n    created() {\r\n      this.getCode();\r\n      this.getCookie();\r\n    },\r\n    methods: {\r\n      getCode() {\r\n        getCodeImg().then(res => {\r\n          this.captchaEnabled = res.captchaEnabled === undefined ? true : res.captchaEnabled;\r\n          if (this.captchaEnabled) {\r\n            this.codeUrl = \"data:image/gif;base64,\" + res.img;\r\n            this.loginForm.uuid = res.uuid;\r\n          }\r\n        });\r\n      },\r\n      getCookie() {\r\n        const username = Cookies.get(\"username\");\r\n        const password = Cookies.get(\"password\");\r\n        const rememberMe = Cookies.get('rememberMe')\r\n        this.loginForm = {\r\n          username: username === undefined ? this.loginForm.username : username,\r\n          password: password === undefined ? this.loginForm.password : decrypt(password),\r\n          rememberMe: rememberMe === undefined ? false : Boolean(rememberMe)\r\n        };\r\n      },\r\n      handleLogin() {\r\n        this.$refs.loginForm.validate(valid => {\r\n          if (valid) {\r\n            this.loading = true;\r\n            if (this.loginForm.rememberMe) {\r\n              Cookies.set(\"username\", this.loginForm.username, { expires: 30 });\r\n              Cookies.set(\"password\", encrypt(this.loginForm.password), { expires: 30 });\r\n              Cookies.set('rememberMe', this.loginForm.rememberMe, { expires: 30 });\r\n            } else {\r\n              Cookies.remove(\"username\");\r\n              Cookies.remove(\"password\");\r\n              Cookies.remove('rememberMe');\r\n            }\r\n            this.$store.dispatch(\"Login\", this.loginForm).then(() => {\r\n              this.$router.push({ path: this.redirect || \"/\" }).catch(()=>{});\r\n            }).catch(() => {\r\n              this.loading = false;\r\n              if (this.captchaEnabled) {\r\n                this.getCode();\r\n              }\r\n            });\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n  </script>\r\n  \r\n  <style rel=\"stylesheet/scss\" lang=\"scss\">\r\n  .login {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n    // background-image: url(\"../assets/images/login-background.jpg\");\r\n    background-size: cover;\r\n  }\r\n  .title {\r\n    margin: 0px auto 30px auto;\r\n    text-align: center;\r\n    color: #707070;\r\n  }\r\n  \r\n  .login-form {\r\n    border-radius: 6px;\r\n    background: #ffffff;\r\n    width: 400px;\r\n    padding: 25px 25px 5px 25px;\r\n    .el-input {\r\n      height: 38px;\r\n      input {\r\n        height: 38px;\r\n      }\r\n    }\r\n    .input-icon {\r\n      height: 39px;\r\n      width: 14px;\r\n      margin-left: 2px;\r\n    }\r\n  }\r\n  .login-tip {\r\n    font-size: 13px;\r\n    text-align: center;\r\n    color: #bfbfbf;\r\n  }\r\n  .login-code {\r\n    width: 33%;\r\n    height: 38px;\r\n    float: right;\r\n    img {\r\n      cursor: pointer;\r\n      vertical-align: middle;\r\n    }\r\n  }\r\n  .el-login-footer {\r\n    height: 40px;\r\n    line-height: 40px;\r\n    position: fixed;\r\n    bottom: 0;\r\n    width: 100%;\r\n    text-align: center;\r\n    color: #fff;\r\n    font-family: Arial;\r\n    font-size: 12px;\r\n    letter-spacing: 1px;\r\n  }\r\n  .login-code-img {\r\n    height: 38px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}