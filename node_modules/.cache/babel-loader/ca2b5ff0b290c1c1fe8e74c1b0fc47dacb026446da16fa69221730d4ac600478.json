{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nexport default {\n  data() {\n    return {\n      levelList: null\n    };\n  },\n  watch: {\n    $route(route) {\n      // if you go to the redirect page, do not update the breadcrumbs\n      if (route.path.startsWith('/redirect/')) {\n        return;\n      }\n      this.getBreadcrumb();\n    }\n  },\n  created() {\n    this.getBreadcrumb();\n  },\n  methods: {\n    getBreadcrumb() {\n      // only show routes with meta.title\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title);\n      const first = matched[0];\n      if (!this.isDashboard(first)) {\n        matched = [{\n          path: '/index',\n          meta: {\n            title: '扶뒬못'\n          }\n        }].concat(matched);\n      }\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false);\n    },\n    isDashboard(route) {\n      const name = route && route.name;\n      if (!name) {\n        return false;\n      }\n      return name.trim() === 'Index';\n    },\n    handleLink(item) {\n      const {\n        redirect,\n        path\n      } = item;\n      if (redirect) {\n        this.$router.push(redirect);\n        return;\n      }\n      this.$router.push(path);\n    }\n  }\n};","map":{"version":3,"names":["data","levelList","watch","$route","route","path","startsWith","getBreadcrumb","created","methods","matched","filter","item","meta","title","first","isDashboard","concat","breadcrumb","name","trim","handleLink","redirect","$router","push"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\components\\Breadcrumb\\index.vue"],"sourcesContent":["<template>\n  <el-breadcrumb class=\"app-breadcrumb\" separator=\"/\">\n    <transition-group name=\"breadcrumb\">\n      <el-breadcrumb-item v-for=\"(item,index) in levelList\" :key=\"item.path\">\n        <span v-if=\"item.redirect === 'noRedirect' || index == levelList.length - 1\" class=\"no-redirect\">{{ item.meta.title }}</span>\n        <a v-else @click.prevent=\"handleLink(item)\">{{ item.meta.title }}</a>\n      </el-breadcrumb-item>\n    </transition-group>\n  </el-breadcrumb>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      levelList: null\n    }\n  },\n  watch: {\n    $route(route) {\n      // if you go to the redirect page, do not update the breadcrumbs\n      if (route.path.startsWith('/redirect/')) {\n        return\n      }\n      this.getBreadcrumb()\n    }\n  },\n  created() {\n    this.getBreadcrumb()\n  },\n  methods: {\n    getBreadcrumb() {\n      // only show routes with meta.title\n      let matched = this.$route.matched.filter(item => item.meta && item.meta.title)\n      const first = matched[0]\n\n      if (!this.isDashboard(first)) {\n        matched = [{ path: '/index', meta: { title: '扶뒬못' }}].concat(matched)\n      }\n\n      this.levelList = matched.filter(item => item.meta && item.meta.title && item.meta.breadcrumb !== false)\n    },\n    isDashboard(route) {\n      const name = route && route.name\n      if (!name) {\n        return false\n      }\n      return name.trim() === 'Index'\n    },\n    handleLink(item) {\n      const { redirect, path } = item\n      if (redirect) {\n        this.$router.push(redirect)\n        return\n      }\n      this.$router.push(path)\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\" scoped>\n.app-breadcrumb.el-breadcrumb {\n  display: inline-block;\n  font-size: 14px;\n  line-height: 50px;\n  margin-left: 8px;\n\n  .no-redirect {\n    color: #97a8be;\n    cursor: text;\n  }\n}\n</style>\n"],"mappings":";AAYA,eAAe;EACbA,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,KAAK,EAAE;IACLC,MAAMA,CAACC,KAAK,EAAE;MACZ;MACA,IAAIA,KAAK,CAACC,IAAI,CAACC,UAAU,CAAC,YAAY,CAAC,EAAE;QACvC;MACF;MACA,IAAI,CAACC,aAAa,CAAC;IACrB;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAACD,aAAa,CAAC;EACrB,CAAC;EACDE,OAAO,EAAE;IACPF,aAAaA,CAAA,EAAG;MACd;MACA,IAAIG,OAAM,GAAI,IAAI,CAACP,MAAM,CAACO,OAAO,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAG,IAAKD,IAAI,CAACC,IAAI,CAACC,KAAK;MAC7E,MAAMC,KAAI,GAAIL,OAAO,CAAC,CAAC;MAEvB,IAAI,CAAC,IAAI,CAACM,WAAW,CAACD,KAAK,CAAC,EAAE;QAC5BL,OAAM,GAAI,CAAC;UAAEL,IAAI,EAAE,QAAQ;UAAEQ,IAAI,EAAE;YAAEC,KAAK,EAAE;UAAK;QAAC,CAAC,CAAC,CAACG,MAAM,CAACP,OAAO;MACrE;MAEA,IAAI,CAACT,SAAQ,GAAIS,OAAO,CAACC,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,IAAG,IAAKD,IAAI,CAACC,IAAI,CAACC,KAAI,IAAKF,IAAI,CAACC,IAAI,CAACK,UAAS,KAAM,KAAK;IACxG,CAAC;IACDF,WAAWA,CAACZ,KAAK,EAAE;MACjB,MAAMe,IAAG,GAAIf,KAAI,IAAKA,KAAK,CAACe,IAAG;MAC/B,IAAI,CAACA,IAAI,EAAE;QACT,OAAO,KAAI;MACb;MACA,OAAOA,IAAI,CAACC,IAAI,CAAC,MAAM,OAAM;IAC/B,CAAC;IACDC,UAAUA,CAACT,IAAI,EAAE;MACf,MAAM;QAAEU,QAAQ;QAAEjB;MAAK,IAAIO,IAAG;MAC9B,IAAIU,QAAQ,EAAE;QACZ,IAAI,CAACC,OAAO,CAACC,IAAI,CAACF,QAAQ;QAC1B;MACF;MACA,IAAI,CAACC,OAAO,CAACC,IAAI,CAACnB,IAAI;IACxB;EACF;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}