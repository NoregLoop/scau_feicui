{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { constantRoutes } from \"@/router\";\n\n// 隐藏侧边栏路由\nconst hideList = ['/index', '/user/profile'];\nexport default {\n  data() {\n    return {\n      // 顶部栏初始数\n      visibleNumber: 5,\n      // 当前激活菜单的 index\n      currentIndex: undefined\n    };\n  },\n  computed: {\n    theme() {\n      return this.$store.state.settings.theme;\n    },\n    // 顶部显示菜单\n    topMenus() {\n      let topMenus = [];\n      this.routers.map(menu => {\n        if (menu.hidden !== true) {\n          // 兼容顶部栏一级菜单内部跳转\n          if (menu.path === \"/\") {\n            topMenus.push(menu.children[0]);\n          } else {\n            topMenus.push(menu);\n          }\n        }\n      });\n      return topMenus;\n    },\n    // 所有的路由信息\n    routers() {\n      return this.$store.state.permission.topbarRouters;\n    },\n    // 设置子路由\n    childrenMenus() {\n      var childrenMenus = [];\n      this.routers.map(router => {\n        for (var item in router.children) {\n          if (router.children[item].parentPath === undefined) {\n            if (router.path === \"/\") {\n              router.children[item].path = \"/\" + router.children[item].path;\n            } else {\n              if (!this.ishttp(router.children[item].path)) {\n                router.children[item].path = router.path + \"/\" + router.children[item].path;\n              }\n            }\n            router.children[item].parentPath = router.path;\n          }\n          childrenMenus.push(router.children[item]);\n        }\n      });\n      return constantRoutes.concat(childrenMenus);\n    },\n    // 默认激活的菜单\n    activeMenu() {\n      const path = this.$route.path;\n      let activePath = path;\n      if (path !== undefined && path.lastIndexOf(\"/\") > 0 && hideList.indexOf(path) === -1) {\n        const tmpPath = path.substring(1, path.length);\n        activePath = \"/\" + tmpPath.substring(0, tmpPath.indexOf(\"/\"));\n        if (!this.$route.meta.link) {\n          this.$store.dispatch('app/toggleSideBarHide', false);\n        }\n      } else if (!this.$route.children) {\n        activePath = path;\n        this.$store.dispatch('app/toggleSideBarHide', true);\n      }\n      this.activeRoutes(activePath);\n      return activePath;\n    }\n  },\n  beforeMount() {\n    window.addEventListener('resize', this.setVisibleNumber);\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.setVisibleNumber);\n  },\n  mounted() {\n    this.setVisibleNumber();\n  },\n  methods: {\n    // 根据宽度计算设置显示栏数\n    setVisibleNumber() {\n      const width = document.body.getBoundingClientRect().width / 3;\n      this.visibleNumber = parseInt(width / 85);\n    },\n    // 菜单选择事件\n    handleSelect(key, keyPath) {\n      this.currentIndex = key;\n      const route = this.routers.find(item => item.path === key);\n      if (this.ishttp(key)) {\n        // http(s):// 路径新窗口打开\n        window.open(key, \"_blank\");\n      } else if (!route || !route.children) {\n        // 没有子路由路径内部打开\n        const routeMenu = this.childrenMenus.find(item => item.path === key);\n        if (routeMenu && routeMenu.query) {\n          let query = JSON.parse(routeMenu.query);\n          this.$router.push({\n            path: key,\n            query: query\n          });\n        } else {\n          this.$router.push({\n            path: key\n          });\n        }\n        this.$store.dispatch('app/toggleSideBarHide', true);\n      } else {\n        // 显示左侧联动菜单\n        this.activeRoutes(key);\n        this.$store.dispatch('app/toggleSideBarHide', false);\n      }\n    },\n    // 当前激活的路由\n    activeRoutes(key) {\n      var routes = [];\n      if (this.childrenMenus && this.childrenMenus.length > 0) {\n        this.childrenMenus.map(item => {\n          if (key == item.parentPath || key == \"index\" && \"\" == item.path) {\n            routes.push(item);\n          }\n        });\n      }\n      if (routes.length > 0) {\n        this.$store.commit(\"SET_SIDEBAR_ROUTERS\", routes);\n      } else {\n        this.$store.dispatch('app/toggleSideBarHide', true);\n      }\n    },\n    ishttp(url) {\n      return url.indexOf('http://') !== -1 || url.indexOf('https://') !== -1;\n    }\n  }\n};","map":{"version":3,"names":["constantRoutes","hideList","data","visibleNumber","currentIndex","undefined","computed","theme","$store","state","settings","topMenus","routers","map","menu","hidden","path","push","children","permission","topbarRouters","childrenMenus","router","item","parentPath","ishttp","concat","activeMenu","$route","activePath","lastIndexOf","indexOf","tmpPath","substring","length","meta","link","dispatch","activeRoutes","beforeMount","window","addEventListener","setVisibleNumber","beforeDestroy","removeEventListener","mounted","methods","width","document","body","getBoundingClientRect","parseInt","handleSelect","key","keyPath","route","find","open","routeMenu","query","JSON","parse","$router","routes","commit","url"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\components\\TopNav\\index.vue"],"sourcesContent":["<template>\n  <el-menu\n    :default-active=\"activeMenu\"\n    mode=\"horizontal\"\n    @select=\"handleSelect\"\n  >\n    <template v-for=\"(item, index) in topMenus\">\n      <el-menu-item :style=\"{'--theme': theme}\" :index=\"item.path\" :key=\"index\" v-if=\"index < visibleNumber\"\n        ><svg-icon :icon-class=\"item.meta.icon\" />\n        {{ item.meta.title }}</el-menu-item\n      >\n    </template>\n\n    <!-- 顶部菜单超出数量折叠 -->\n    <el-submenu :style=\"{'--theme': theme}\" index=\"more\" v-if=\"topMenus.length > visibleNumber\">\n      <template slot=\"title\">更多菜单</template>\n      <template v-for=\"(item, index) in topMenus\">\n        <el-menu-item\n          :index=\"item.path\"\n          :key=\"index\"\n          v-if=\"index >= visibleNumber\"\n          ><svg-icon :icon-class=\"item.meta.icon\" />\n          {{ item.meta.title }}</el-menu-item\n        >\n      </template>\n    </el-submenu>\n  </el-menu>\n</template>\n\n<script>\nimport { constantRoutes } from \"@/router\";\n\n// 隐藏侧边栏路由\nconst hideList = ['/index', '/user/profile'];\n\nexport default {\n  data() {\n    return {\n      // 顶部栏初始数\n      visibleNumber: 5,\n      // 当前激活菜单的 index\n      currentIndex: undefined\n    };\n  },\n  computed: {\n    theme() {\n      return this.$store.state.settings.theme;\n    },\n    // 顶部显示菜单\n    topMenus() {\n      let topMenus = [];\n      this.routers.map((menu) => {\n        if (menu.hidden !== true) {\n          // 兼容顶部栏一级菜单内部跳转\n          if (menu.path === \"/\") {\n              topMenus.push(menu.children[0]);\n          } else {\n              topMenus.push(menu);\n          }\n        }\n      });\n      return topMenus;\n    },\n    // 所有的路由信息\n    routers() {\n      return this.$store.state.permission.topbarRouters;\n    },\n    // 设置子路由\n    childrenMenus() {\n      var childrenMenus = [];\n      this.routers.map((router) => {\n        for (var item in router.children) {\n          if (router.children[item].parentPath === undefined) {\n            if(router.path === \"/\") {\n              router.children[item].path = \"/\" + router.children[item].path;\n            } else {\n              if(!this.ishttp(router.children[item].path)) {\n                router.children[item].path = router.path + \"/\" + router.children[item].path;\n              }\n            }\n            router.children[item].parentPath = router.path;\n          }\n          childrenMenus.push(router.children[item]);\n        }\n      });\n      return constantRoutes.concat(childrenMenus);\n    },\n    // 默认激活的菜单\n    activeMenu() {\n      const path = this.$route.path;\n      let activePath = path;\n      if (path !== undefined && path.lastIndexOf(\"/\") > 0 && hideList.indexOf(path) === -1) {\n        const tmpPath = path.substring(1, path.length);\n        activePath = \"/\" + tmpPath.substring(0, tmpPath.indexOf(\"/\"));\n        if (!this.$route.meta.link) {\n          this.$store.dispatch('app/toggleSideBarHide', false);\n        }\n      } else if(!this.$route.children) {\n        activePath = path;\n        this.$store.dispatch('app/toggleSideBarHide', true);\n      }\n      this.activeRoutes(activePath);\n      return activePath;\n    },\n  },\n  beforeMount() {\n    window.addEventListener('resize', this.setVisibleNumber)\n  },\n  beforeDestroy() {\n    window.removeEventListener('resize', this.setVisibleNumber)\n  },\n  mounted() {\n    this.setVisibleNumber();\n  },\n  methods: {\n    // 根据宽度计算设置显示栏数\n    setVisibleNumber() {\n      const width = document.body.getBoundingClientRect().width / 3;\n      this.visibleNumber = parseInt(width / 85);\n    },\n    // 菜单选择事件\n    handleSelect(key, keyPath) {\n      this.currentIndex = key;\n      const route = this.routers.find(item => item.path === key);\n      if (this.ishttp(key)) {\n        // http(s):// 路径新窗口打开\n        window.open(key, \"_blank\");\n      } else if (!route || !route.children) {\n        // 没有子路由路径内部打开\n        const routeMenu = this.childrenMenus.find(item => item.path === key);\n        if (routeMenu && routeMenu.query) {\n          let query = JSON.parse(routeMenu.query);\n          this.$router.push({ path: key, query: query });\n        } else {\n          this.$router.push({ path: key });\n        }\n        this.$store.dispatch('app/toggleSideBarHide', true);\n      } else {\n        // 显示左侧联动菜单\n        this.activeRoutes(key);\n        this.$store.dispatch('app/toggleSideBarHide', false);\n      }\n    },\n    // 当前激活的路由\n    activeRoutes(key) {\n      var routes = [];\n      if (this.childrenMenus && this.childrenMenus.length > 0) {\n        this.childrenMenus.map((item) => {\n          if (key == item.parentPath || (key == \"index\" && \"\" == item.path)) {\n            routes.push(item);\n          }\n        });\n      }\n      if(routes.length > 0) {\n        this.$store.commit(\"SET_SIDEBAR_ROUTERS\", routes);\n      } else {\n        this.$store.dispatch('app/toggleSideBarHide', true);\n      }\n    },\n    ishttp(url) {\n      return url.indexOf('http://') !== -1 || url.indexOf('https://') !== -1\n    }\n  },\n};\n</script>\n\n<style lang=\"scss\">\n.topmenu-container.el-menu--horizontal > .el-menu-item {\n  float: left;\n  height: 50px !important;\n  line-height: 50px !important;\n  color: #999093 !important;\n  padding: 0 5px !important;\n  margin: 0 10px !important;\n}\n\n.topmenu-container.el-menu--horizontal > .el-menu-item.is-active, .el-menu--horizontal > .el-submenu.is-active .el-submenu__title {\n  border-bottom: 2px solid #{'var(--theme)'} !important;\n  color: #303133;\n}\n\n/* submenu item */\n.topmenu-container.el-menu--horizontal > .el-submenu .el-submenu__title {\n  float: left;\n  height: 50px !important;\n  line-height: 50px !important;\n  color: #999093 !important;\n  padding: 0 5px !important;\n  margin: 0 10px !important;\n}\n</style>\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}