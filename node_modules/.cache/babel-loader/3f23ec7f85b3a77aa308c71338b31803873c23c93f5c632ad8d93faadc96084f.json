{"ast":null,"code":"import { mapGetters, mapState } from \"vuex\";\nimport Logo from \"./Logo\";\nimport SidebarItem from \"./SidebarItem\";\nimport variables from \"@/assets/styles/variables.scss\";\nexport default {\n  components: {\n    SidebarItem,\n    Logo\n  },\n  computed: {\n    ...mapState([\"settings\"]),\n    ...mapGetters([\"sidebarRouters\", \"sidebar\"]),\n    activeMenu() {\n      const route = this.$route;\n      const {\n        meta,\n        path\n      } = route;\n      // if set path, the sidebar will highlight the path you set\n      if (meta.activeMenu) {\n        return meta.activeMenu;\n      }\n      return path;\n    },\n    showLogo() {\n      return this.$store.state.settings.sidebarLogo;\n    },\n    variables() {\n      return variables;\n    },\n    isCollapse() {\n      return !this.sidebar.opened;\n    }\n  }\n};","map":{"version":3,"names":["mapGetters","mapState","Logo","SidebarItem","variables","components","computed","activeMenu","route","$route","meta","path","showLogo","$store","state","settings","sidebarLogo","isCollapse","sidebar","opened"],"sources":["D:\\devprojects\\VsProjects\\Tobacco\\tobacco\\src\\layout\\components\\Sidebar\\index.vue"],"sourcesContent":["<template>\r\n    <div :class=\"{'has-logo':showLogo}\" :style=\"{ backgroundColor: settings.sideTheme === 'theme-dark' ? variables.menuBackground : variables.menuLightBackground }\">\r\n        <logo v-if=\"showLogo\" :collapse=\"isCollapse\" />\r\n        <el-scrollbar :class=\"settings.sideTheme\" wrap-class=\"scrollbar-wrapper\">\r\n            <el-menu\r\n                :default-active=\"activeMenu\"\r\n                :collapse=\"isCollapse\"\r\n                :background-color=\"settings.sideTheme === 'theme-dark' ? variables.menuBackground : variables.menuLightBackground\"\r\n                :text-color=\"settings.sideTheme === 'theme-dark' ? variables.menuColor : variables.menuLightColor\"\r\n                :unique-opened=\"true\"\r\n                :active-text-color=\"settings.theme\"\r\n                :collapse-transition=\"false\"\r\n                mode=\"vertical\"\r\n            >\r\n                <sidebar-item\r\n                    v-for=\"(route, index) in sidebarRouters\"\r\n                    :key=\"route.path  + index\"\r\n                    :item=\"route\"\r\n                    :base-path=\"route.path\"\r\n                />\r\n            </el-menu>\r\n        </el-scrollbar>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapGetters, mapState } from \"vuex\";\r\nimport Logo from \"./Logo\";\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport variables from \"@/assets/styles/variables.scss\";\r\n\r\nexport default {\r\n    components: { SidebarItem, Logo },\r\n    computed: {\r\n        ...mapState([\"settings\"]),\r\n        ...mapGetters([\"sidebarRouters\", \"sidebar\"]),\r\n        activeMenu() {\r\n            const route = this.$route;\r\n            const { meta, path } = route;\r\n            // if set path, the sidebar will highlight the path you set\r\n            if (meta.activeMenu) {\r\n                return meta.activeMenu;\r\n            }\r\n            return path;\r\n        },\r\n        showLogo() {\r\n            return this.$store.state.settings.sidebarLogo;\r\n        },\r\n        variables() {\r\n            return variables;\r\n        },\r\n        isCollapse() {\r\n            return !this.sidebar.opened;\r\n        }\r\n    }\r\n};\r\n</script>\r\n"],"mappings":"AA0BA,SAASA,UAAU,EAAEC,QAAO,QAAS,MAAM;AAC3C,OAAOC,IAAG,MAAO,QAAQ;AACzB,OAAOC,WAAU,MAAO,eAAe;AACvC,OAAOC,SAAQ,MAAO,gCAAgC;AAEtD,eAAe;EACXC,UAAU,EAAE;IAAEF,WAAW;IAAED;EAAK,CAAC;EACjCI,QAAQ,EAAE;IACN,GAAGL,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;IACzB,GAAGD,UAAU,CAAC,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;IAC5CO,UAAUA,CAAA,EAAG;MACT,MAAMC,KAAI,GAAI,IAAI,CAACC,MAAM;MACzB,MAAM;QAAEC,IAAI;QAAEC;MAAK,IAAIH,KAAK;MAC5B;MACA,IAAIE,IAAI,CAACH,UAAU,EAAE;QACjB,OAAOG,IAAI,CAACH,UAAU;MAC1B;MACA,OAAOI,IAAI;IACf,CAAC;IACDC,QAAQA,CAAA,EAAG;MACP,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACC,QAAQ,CAACC,WAAW;IACjD,CAAC;IACDZ,SAASA,CAAA,EAAG;MACR,OAAOA,SAAS;IACpB,CAAC;IACDa,UAAUA,CAAA,EAAG;MACT,OAAO,CAAC,IAAI,CAACC,OAAO,CAACC,MAAM;IAC/B;EACJ;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}